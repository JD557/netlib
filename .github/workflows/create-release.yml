# This workflow will create a release when a `v*` tag is pushed
# For more information see: https://github.com/actions/create-release

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Sonatype OSSRH
      uses: actions/setup-java@v1
      with: # running setup-java again overwrites the settings.xml
        java-version: 17-ea
        server-id: ossrh
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
        gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
    - name: Publish to Sonatype OSSRH
      run: mvn --batch-mode deploy
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: true

    - name: Run benchmarks
      run: java -jar benchmarks/target/blas-benchmarks.jar 'dev.ludovic.blas.benchmarks.l1.*' 'dev.ludovic.blas.benchmarks.l2.*' -f 1 -wi 3 -i 3 -p implementation=f2j,java,vector -rf csv -rff jmh-results.csv | tee jmh.out
    - name: Upload JMH results
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: jmh-results.csv
        asset_name: jmh-results.csv
        asset_content_type: text/csv
    - name: Upload JMH output
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: jmh.out
        asset_name: jmh.out
        asset_content_type: text/plain
